#!/bin/bash

# Input validation 
if [ "$#" -ne 3 ]; then
    echo "Usage: cantril_data_cleaning <input_file1.tsv> <input_file2.tsv> <input_file3.tsv>" >&2
    exit 1
fi

# Check if the file exist
check_file_exist() {
    for file in "$@"; do
        if [[ ! -f "$file" || $(wc -l < "$file") -eq 0 ]]; then
            echo "The named input file $file does not exist or has zero length." >&2
            exit 1
        fi
        if [[ $(wc -l < "$file") -eq 1 ]]; then
            echo "The named input file $file has no valid data." >&2
            exit 1
        fi
    done
}

# Check for tab delimitation
check_tab_separator() {
    for file in "$@"; do
        first_line=$(head -n 1 "$file")
        if [[ "$first_line" != *$'\t'* ]]; then
            echo "File $file is not tab-separated." >&2
            exit 1
        fi
    done
}

# Check rows with different number of cells but allow cells to be empty
check_inconsistent_lines() {
    for file in "$@"; do
        awk -F '\t' 'NR == 1 { num_tabs = NF } NF != num_tabs { print "Inconsistent line in file " FILENAME " at line " NR ": " $0;exit 1}' "$file"
    done
}

# Clean columns and remove empty rows
clean_columns(){
    continent_index=$(awk -F'\t' '{for(i=1;i<=NF;i++) if($i=="Continent") {print i; exit}}' "$1")
    awk -F'\t' -v continent_index="$continent_index" 'BEGIN {OFS="\t"} {if (NR==1 || ($3>=2011 && $3<=2021)) {empty=0; for(i=1;i<=3;i++) 
                if($i=="") {empty=1; break} if(empty==0) {printf $1$2$3 "\t";for(i=1;i<=NF;i++) if(i!=continent_index) 
                printf "%s%s", $i, "\t"; print ""}}}' "$1" > "$2"
}

# Clean all files
clean_file(){
    clean_columns "$1" "$4"
    clean_columns "$2" "$5"
    clean_columns "$3" "$6"
}

# Merge files
merge_file() {
    output=$(mktemp)
    awk 'BEGIN {FS="\t"; OFS="\t"} NR==FNR {a[$1]=$0; next} ($1 in a) && !seen[$1]++ {print a[$1], $0}' "$1" "$2" > "$output"
    awk 'BEGIN {FS="\t"; OFS="\t"} NR==FNR {a[$1]=$0; next} ($1 in a) && !seen[$1]++ {print a[$1], $0}' "$output" "$3" > "$4"
    rm "$output"
}

# Order columns
order_columns() {
    awk -F'\t' 'BEGIN {OFS="\t"} 
    NR==1 { 
        for (i=1; i<=NF; i++) { 
            if ($i == "Entity") entity_index=i; 
            if ($i == "Code") code_index=i; 
            if ($i == "Year") year_index=i; 
            if ($i == "\"GDP per capita, PPP (constant 2017 international $)\"") gdp_index=i; 
            if ($i == "Population (historical estimates)") population_index=i; 
            if ($i == "\"Homicide rate per 100,000 population - Both sexes - All ages\"") homicide_index=i; 
            if ($i == "Life expectancy - Sex: all - Age: at birth - Variant: estimates") life_expectancy_index=i; 
            if ($i == "Cantril ladder score") cantril_ladder_score_index=i; 
        } 
        print "Entity/Country", "Code", "Year", "GDP per capita", "Population", "Homicide Rate", "Life Expectancy", "Cantril Ladder score"
    } NR > 1 { 
        print $entity_index, $code_index, $year_index, $gdp_index, $population_index, $homicide_index, $life_expectancy_index, $cantril_ladder_score_index 
        } ' "$1" > "$2"
}

# main function
main() {
    temp_output1=$(mktemp)
    temp_output2=$(mktemp)
    temp_output3=$(mktemp)
    merged_output=$(mktemp)
    merged_output2=$(mktemp)

    check_file_exist "$1" "$2" "$3"
    # 检查行数

    check_tab_separator "$1" "$2" "$3"
    
    check_inconsistent_lines "$1" "$2" "$3"
          
    # Clean files
    clean_file "$1" "$2" "$3" "$temp_output1" "$temp_output2" "$temp_output3"
    
    # Merge files    
    merge_file "$temp_output1" "$temp_output2" "$temp_output3" "$merged_output"

    # Order columns
    order_columns "$merged_output" "$merged_output2"

    # print results
    cat "$merged_output2"
    
    # Delete the temporary file
    rm "$temp_output1" "$temp_output2" "$temp_output3" "$merged_output" "$merged_output2"
}

main "$1" "$2" "$3"
