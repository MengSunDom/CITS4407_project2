#!/bin/bash

# Input validation 
if [ "$#" -ne 3 ]; then
    echo "Usage: $0 <input_file1.tsv> <input_file2.tsv> <input_file3.tsv>"
    exit 1
fi

input_file1="$1"
input_file2="$2"
input_file3="$3"

# Check if the file exist
for file in "$1" "$2" "$3"; do
    if [ ! -f "$file" ]; then
        echo "Input file $file does not exist."
        exit 1
    fi
done

# Check the file type
check_file_type() {
    first_line=$(head -n 1 "$1")
    if [[ "$first_line" == *$'\t'* ]]; then
        echo "TSV"
    else
        echo "UNKNOWN"
    fi
}

# Check for tab delimitation
check_tab_separator() {
    first_line=$(head -n 1 "$1")
    if [[ "$first_line" == *$'\t'* ]]; then
        return 0
    else
        return 1
    fi
}

# Check rows with different number of cells but allow cells to be empty
check_inconsistent_lines() {
    for file in "$@"; do
        awk -F '\t' 'NR == 1 { num_tabs = NF } NF != num_tabs { print "Inconsistent line in file " FILENAME " at line " NR ": " $0 }' "$file"
    done
}

# Clean the file, remove the Continent column and the empty Code column
clean_files() {
    for file in "$@"; do
        awk -F '\t' 'NR==1 { for (i=1; i<=NF; i++) { if ($i == "Continent") continent_index=i; if ($i == "Code") code_index=i } } 
                     { if ($code_index != "" || NR == 1) { $continent_index=""; print } }' "$file"
    done
}

# Function to merge three TSV files
merge_files() {
    # Get the header line from the first file
    header=$(head -n 1 "$1")

    # Output the header line
    echo "$header"

    # Merge the data from all three files
    tail -n +2 "$@" | awk -F '\t' -v OFS='\t' '
        # For the first file, store the values of Entity, Code, and Year in an array
        NR == FNR {
            entity_code_year[$1,$2,$3] = 1
            next
        }
        # For subsequent files, if Entity, Code, and Year are already in the array, skip the line
        ($1,$2,$3) in entity_code_year {
            next
        }
        # If Entity, Code, and Year are not in the array, add them to the array and print the line
        {
            entity_code_year[$1,$2,$3] = 1
            print
        }
    ' "$@"
}

# Output the first row name
echo -e "Entity/Country\tCode\tYear\tGDP per capita\tPopulation\tHomicide Rate\tLife Expectancy\tCantril Ladder score" > "test.tsv"

# 主函数
main() {
    echo "1"
    check_inconsistent_lines "$input_file1" "$input_file2" "$input_file3"
    echo "2"
    if ! check_tab_separator "$input_file1"; then
        echo "File $input_file1 is not tab-separated."
        exit 1
    fi
    echo "3"
    #clean_files "$input_file1" "$input_file2" "$input_file3" | 
    merge_files "$input_file1" "$input_file2" "$input_file3" >> "test.tsv"
    echo "4"
}

main
