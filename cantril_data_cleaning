#!/bin/bash

# 输入校验
if [ "$#" -ne 4 ]; then
    echo "Usage: $0 <input_file1.tsv> <input_file2.tsv> <input_file3.tsv> <output_file.tsv>"
    exit 1
fi

input_file1="$1"
input_file2="$2"
input_file3="$3"
output_file="$4"

# 检查输入文件是否存在
for file in "$input_file1" "$input_file2" "$input_file3"; do
    if [ ! -f "$file" ]; then
        echo "Input file $file does not exist."
        exit 1
    fi
done

# 检查文件类型是否为TSV
check_file_type() {
    first_line=$(head -n 1 "$1")
    if [[ "$first_line" == *$'\t'* ]]; then
        echo "TSV"
    else
        echo "UNKNOWN"
    fi
}

# 检查制表符分隔
check_tab_separator() {
    first_line=$(head -n 1 "$1")
    if [[ "$first_line" == *$'\t'* ]]; then
        return 0
    else
        return 1
    fi
}

# 检查单元格数不同的行，但允许单元格为空
check_inconsistent_lines() {
    for file in "$1" "$2" "$3"; do
        num_tabs=$(head -n 1 "$file" | tr -cd '\t' | wc -c)
        awk -F '\t' -v num_tabs="$num_tabs" 'NF != num_tabs && NF != 0' "$file" | while IFS= read -r line; do
            echo "Inconsistent line in $file: $line"
        done
    done
}

# 清理文件，删除 Continent 列和空的 Code 列
clean_files() {
    for file in "$1" "$2" "$3"; do
        awk -F '\t' 'NR==1 { for (i=1; i<=NF; i++) { if ($i == "Continent") continent_index=i; if ($i == "Code") code_index=i } } 
                     { if ($code_index != "" || NR == 1) { $continent_index=""; print } }' "$file"
    done
}

# 合并文件并根据 Year 列筛选出2011到2021年的数据
merge_files() {
    awk -F '\t' 'NR==1 { for (i=1; i<=NF; i++) { if ($i == "Entity") entity_index=i; if ($i == "Code") code_index=i; if ($i == "Year") year_index=i } } 
                 { if ($year_index >= 2011 && $year_index <= 2021) print $entity_index, $code_index, $year_index, $0 }' "$1" "$2" "$3"
}

# 输出首行列名
echo -e "Entity/Country\tCode\tYear\tGDP per capita\tPopulation\tHomicide Rate\tLife Expectancy\tCantril Ladder score" > "$output_file"

# 主函数
main() {
    check_inconsistent_lines "$input_file1" "$input_file2" "$input_file3"

    if ! check_tab_separator "$input_file1"; then
        echo "File $input_file1 is not tab-separated."
        exit 1
    fi

    clean_files "$input_file1" "$input_file2" "$input_file3" | merge_files "$input_file1" "$input_file2" "$input_file3" >> "$output_file"
}

main
